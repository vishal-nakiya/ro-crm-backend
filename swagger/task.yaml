paths:
  /task/getAll:
    get:
      summary: Get all tasks for technician
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [PENDING, COMPLETED]
          description: Filter tasks by status
          example: PENDING
      responses:
        "200":
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Tasks fetched successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized - authentication required
        "500":
          description: Internal server error

  /task/getOne/{id}:
    get:
      summary: Get single task by ID
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Task ID
          example: "507f1f77bcf86cd799439011"
      responses:
        "200":
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Task fetched successfully"
                  data:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request - invalid ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - authentication required
        "404":
          description: Task not found
        "500":
          description: Internal server error

  /task/sharetask:
    post:
      summary: Share task with another technician
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - taskId
                - phoneNumber
              properties:
                taskId:
                  type: string
                  description: Task ID
                  example: "507f1f77bcf86cd799439011"
                phoneNumber:
                  type: string
                  description: Phone number of technician to share with
                  example: "+1234567890"
      responses:
        "200":
          description: Task shared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Task shared successfully"
                  data:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - authentication required
        "404":
          description: Task or technician not found
        "500":
          description: Internal server error

  /task/{id}/status:
    patch:
      summary: Update task status
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Task ID
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [PENDING, COMPLETED]
                  description: New task status
                  example: "COMPLETED"
      responses:
        "200":
          description: Task status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Task status updated successfully"
                  data:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - authentication required
        "404":
          description: Task not found
        "500":
          description: Internal server error

  /task/{id}:
    put:
      summary: Update task details
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Task ID
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Task title
                  example: "Updated Task Title"
                sharedWith:
                  type: string
                  description: Technician ID to share with
                  example: "507f1f77bcf86cd799439011"
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Task updated successfully"
                  data:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - authentication required
        "404":
          description: Task not found
        "500":
          description: Internal server error

    delete:
      summary: Delete task
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Task ID
          example: "507f1f77bcf86cd799439011"
      responses:
        "200":
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Task deleted successfully"
        "400":
          description: Bad request - invalid ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - authentication required
        "404":
          description: Task not found
        "500":
          description: Internal server error

  /task/{id}/services:
    post:
      summary: Add services to task
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Task ID
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceIds
              properties:
                serviceIds:
                  type: array
                  minItems: 1
                  items:
                    type: string
                  description: Array of service IDs to add
                  example:
                    ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439012"]
      responses:
        "200":
          description: Services added to task successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Services added to task successfully"
                  data:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - authentication required
        "404":
          description: Task not found
        "500":
          description: Internal server error

    delete:
      summary: Remove services from task
      tags: [Tasks]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Task ID
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceIds
              properties:
                serviceIds:
                  type: array
                  minItems: 1
                  items:
                    type: string
                  description: Array of service IDs to remove
                  example:
                    ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439012"]
      responses:
        "200":
          description: Services removed from task successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Services removed from task successfully"
                  data:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - authentication required
        "404":
          description: Task not found
        "500":
          description: Internal server error

components:
  schemas:
    Task:
      type: object
      properties:
        _id:
          type: string
          description: Task ID
          example: "507f1f77bcf86cd799439011"
        title:
          type: string
          description: Task title
          example: "Monthly Maintenance Batch"
        technicianId:
          type: string
          description: Technician ID
          example: "507f1f77bcf86cd799439011"
        services:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                example: "507f1f77bcf86cd799439011"
              serviceNumber:
                type: number
                example: 1001
              category:
                type: string
                enum: [AMC, NEW, PAID]
                example: "AMC"
              status:
                type: string
                enum: [PENDING, COMPLETED]
                example: "PENDING"
              scheduledDate:
                type: string
                format: date-time
                example: "2024-01-15T10:00:00Z"
              customerId:
                type: string
                example: "507f1f77bcf86cd799439011"
              partsUsed:
                type: array
                items:
                  type: object
                  properties:
                    partName:
                      type: string
                      example: "Oil Filter"
                    quantity:
                      type: number
                      example: 1
          description: Array of services in the task
        sharedWith:
          type: object
          properties:
            _id:
              type: string
              example: "507f1f77bcf86cd799439011"
            fullName:
              type: string
              example: "John Doe"
            contactNumber:
              type: string
              example: "+1234567890"
          description: Technician the task is shared with
        status:
          type: string
          enum: [PENDING, COMPLETED]
          description: Task status
          example: "PENDING"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T09:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T12:00:00Z"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Validation error"
        error:
          type: string
          example: "Invalid input data"
