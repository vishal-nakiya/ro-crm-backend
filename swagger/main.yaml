openapi: 3.0.0
info:
  title: RO CRM API
  version: 1.0.0
  description: API for RO CRM Backend

servers:
  - url: /api
    description: API server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    CookieAuth:
      type: apiKey
      in: cookie
      name: token

  schemas:
    Customer:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
          description: Customer's full name
        contactNumber:
          type: string
          description: Customer's contact number
        address:
          type: string
          description: Customer's address
        area:
          type: string
          description: Customer's area/location
        joiningDate:
          type: string
          format: date
          description: Date when customer joined
        tds:
          type: number
          description: TDS value
        roModel:
          type: string
          description: RO model
        category:
          type: string
          enum: [AMC, NEW, PAID]
          description: Customer category
        numberOfServices:
          type: number
          description: Number of services for the customer
        serviceGenerationType:
          type: string
          enum: [AUTOMATIC, MANUAL]
          description: Type of service generation
        remark:
          type: string
          description: Additional remarks
        status:
          type: string
          enum: [ACTIVE, OFFLINE]
          description: Customer status
        technicianId:
          type: string
          description: ID of assigned technician
        services:
          type: array
          items:
            type: string
          description: Array of service IDs
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Bill:
      type: object
      properties:
        _id:
          type: string
        customerId:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              amount:
                type: number
        totalAmount:
          type: number
        status:
          type: string
          enum: [PENDING, PAID, CANCELLED]
        paymentMethod:
          type: string
          enum: [CASH, CARD, UPI, BANK_TRANSFER]
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Service:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        status:
          type: string
          enum: [active, inactive]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Task:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        customerId:
          type: string
        technicianId:
          type: string
        status:
          type: string
          enum: [PENDING, IN_PROGRESS, COMPLETED, CANCELLED]
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, URGENT]
        dueDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Technician:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        specialization:
          type: string
        status:
          type: string
          enum: [active, inactive]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Complaint:
      type: object
      properties:
        _id:
          type: string
          description: Complaint ID
        customerId:
          type: object
          description: Customer information
          properties:
            _id:
              type: string
            fullName:
              type: string
            contactNumber:
              type: string
            address:
              type: string
        technicianId:
          type: string
          description: Technician ID
        text:
          type: string
          description: Complaint text
        status:
          type: string
          enum: [OPEN, CLOSED]
          description: Complaint status
        deletedAt:
          type: string
          format: date-time
          nullable: true
          description: Soft delete timestamp
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error message"

tags:
  - name: Authentication
    description: Login and authentication endpoints
  - name: Customers
    description: Customer management operations
  - name: Services
    description: Service management operations
  - name: Tasks
    description: Task management operations
  - name: Bills
    description: Bill management operations
  - name: Technicians
    description: Technician management operations
  - name: Complaints
    description: Complaint management operations
  - name: OTP
    description: OTP verification operations
  - name: Notifications
    description: Notification management operations
  - name: Reminders
    description: Reminder management operations

# Import route-specific documentation
# These will be merged with the main file
paths:
  # Customer routes will be imported from customer.yaml
  # Bill routes will be imported from bill.yaml
  # Service routes will be imported from service.yaml
  # Task routes will be imported from task.yaml
  # Technician routes will be imported from technician.yaml
  # Complaint routes will be imported from complaint.yaml
  # Login routes will be imported from login.yaml
  # OTP routes will be imported from otp.yaml
  # Notification routes will be imported from notification.yaml
  # Reminder routes will be imported from reminder.yaml
